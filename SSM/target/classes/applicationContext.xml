<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
	<context:component-scan base-package="com.bwf.term14.book">
		<context:exclude-filter type="regex" expression="com.bwf.term14.book.web.*"/>
	</context:component-scan>
		
	<context:property-placeholder location="classpath:jdbc.properties" />
		
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="8" />
		<property name="validationQuery" value="select now();" />
	</bean>
	
	<!-- 由mybatis提供的整合Spring的，MyBatis自己的SqlSessionFactory的实现 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/config.xml" /> <!-- 加载MyBatis的配置文件（settings、typeAliases） -->
		<property name="mapperLocations" value="classpath*:mybatis/mapper/**/*.xml" /> <!-- 加载MyBatis的Mapper映射文件 -->
	</bean>
	
	<!-- 基于sqlSessionFactory对象，分析出xxxMapper.xml文件，根据指定的XxxMaper接口，反射动态生成XXXMapper接口的实例，并放入容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.bwf.term14.book.mapper" />
	</bean>
	
	<!-- 在整合MyBatis时，使用spring-jdbc.jar中的基于JDBC普通数据源的事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="loginCheck" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.bwf.term14.book.service..*.*(..))" />
	</aop:config>	
</beans>